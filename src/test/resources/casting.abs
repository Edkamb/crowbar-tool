module Casting;

interface I{
    [Spec : Ensures(result == 2)]
    Int m ();
}

interface J{

}

interface K extends I{

}

class CI implements K,J{

    [Spec : Ensures(result == 2)]
    Int m (){
        return 2;
    }
}

class C {

    [Spec : Requires(o implements I)]
    [Spec : Requires(o != null)]
    [Spec : Ensures(result == 2)]
    Int preSimpleSuccess(J o){
        I i = o as I;
        Int res = i.m();
        return res;
    }


    [Spec : Requires(o implements I)]
    [Spec : Ensures(result == 2)]
    Int withoutPreSimpleFail1(J o){
        I i = o as I;
        Int res = i.m();
        return res;
    }


    [Spec : Requires(o != null)]
    [Spec : Ensures(result == 2)]
    Int withoutPreSimpleFail2(J o){
        I i = o as I;
        Int res = i.m();
        return res;
    }


    [Spec : Ensures(result == 2)]
    Int withoutPreSimpleFail3(J o){
        I i = o as I;
        Int res = i.m();
        return res;
    }


    [Spec : Requires(o implements I)]
    [Spec : Requires(o != null)]
    [Spec : Ensures(result == 2)]
    Int inliningCastSimpleSuccess(J o) {
        Int res = o as I.m();
        return res;
    }

    [Spec : Requires(o != null)]
    [Spec : Ensures(result == 2)]
    Int extendsCastSimpleSuccess(K o) {
        Int res = o as I.m();
        return res;
    }

    [Spec : Ensures(result == 2)]
    Int castNullNoCallsSuccess(J o){
        I i = o as I;
        return 2;
    }

    [Spec : Ensures(result == 2)]
    Int castNullCallOnNullReturnValFail(J o){
        I i = o as I;
        Int res = i.m();
        return 2;
    }

    [Spec : Ensures(result == 2)]
    Int castCreatedObjectSimpleSuccess(){
        I o = new CI();
        Int res = o.m();
        return res;
    }

    [Spec : Ensures(result == 2)]
    Int castCreatedObjectExtendsSuccess(){
        K o = new CI();
        Int res = o.m();
        return res;
    }

    [Spec : Ensures(result == 2)]
    Int castCreatedObjectDifferentInterfaceSuccess(){
        J o = new CI();
        K i = o as K;
        Int res = i.m();
        return res;
    }

}
{
}